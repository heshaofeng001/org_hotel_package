<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.hotel.packages.dal.PackageInfoBOMapper">
  <resultMap id="BaseResultMap" type="org.hotel.packages.dal.po.PackageInfoBO">
    <id column="package_id" jdbcType="INTEGER" property="packageId" />
    <result column="package_status" jdbcType="VARCHAR" property="packageStatus" />
    <result column="owner_id" jdbcType="VARCHAR" property="ownerId" />
    <result column="owner_type" jdbcType="VARCHAR" property="ownerType" />
    <result column="receive_id" jdbcType="VARCHAR" property="receiveId" />
    <result column="receive_type" jdbcType="VARCHAR" property="receiveType" />
    <result column="receive_date" jdbcType="DATE" property="receiveDate" />
    <result column="check_out_date" jdbcType="DATE" property="checkOutDate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    package_id, package_status, owner_id, owner_type, receive_id, receive_type, receive_date, 
    check_out_date
  </sql>
  <select id="selectByExample" parameterType="org.hotel.packages.dal.po.PackageInfoBOExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from hotel_package
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from hotel_package
    where package_id = #{packageId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="Integer">
    delete from hotel_package
    where package_id = #{packageId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="org.hotel.packages.dal.po.PackageInfoBOExample">
    delete from hotel_package
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.hotel.packages.dal.po.PackageInfoBO">
    <selectKey keyProperty="packageId" order="AFTER" resultType="Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into hotel_package (package_status, owner_id, owner_type, 
      receive_id, receive_type, receive_date, 
      check_out_date)
    values (#{packageStatus,jdbcType=VARCHAR}, #{ownerId,jdbcType=VARCHAR}, #{ownerType,jdbcType=VARCHAR}, 
      #{receiveId,jdbcType=VARCHAR}, #{receiveType,jdbcType=VARCHAR}, #{receiveDate,jdbcType=DATE}, 
      #{checkOutDate,jdbcType=DATE})
  </insert>
  <insert id="insertSelective" parameterType="org.hotel.packages.dal.po.PackageInfoBO">
    <selectKey keyProperty="packageId" order="AFTER" resultType="Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into hotel_package
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="packageStatus != null">
        package_status,
      </if>
      <if test="ownerId != null">
        owner_id,
      </if>
      <if test="ownerType != null">
        owner_type,
      </if>
      <if test="receiveId != null">
        receive_id,
      </if>
      <if test="receiveType != null">
        receive_type,
      </if>
      <if test="receiveDate != null">
        receive_date,
      </if>
      <if test="checkOutDate != null">
        check_out_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="packageStatus != null">
        #{packageStatus,jdbcType=VARCHAR},
      </if>
      <if test="ownerId != null">
        #{ownerId,jdbcType=VARCHAR},
      </if>
      <if test="ownerType != null">
        #{ownerType,jdbcType=VARCHAR},
      </if>
      <if test="receiveId != null">
        #{receiveId,jdbcType=VARCHAR},
      </if>
      <if test="receiveType != null">
        #{receiveType,jdbcType=VARCHAR},
      </if>
      <if test="receiveDate != null">
        #{receiveDate,jdbcType=DATE},
      </if>
      <if test="checkOutDate != null">
        #{checkOutDate,jdbcType=DATE},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.hotel.packages.dal.po.PackageInfoBOExample" resultType="java.lang.Long">
    select count(*) from hotel_package
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update hotel_package
    <set>
      <if test="record.packageId != null">
        package_id = #{record.packageId,jdbcType=INTEGER},
      </if>
      <if test="record.packageStatus != null">
        package_status = #{record.packageStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.ownerId != null">
        owner_id = #{record.ownerId,jdbcType=VARCHAR},
      </if>
      <if test="record.ownerType != null">
        owner_type = #{record.ownerType,jdbcType=VARCHAR},
      </if>
      <if test="record.receiveId != null">
        receive_id = #{record.receiveId,jdbcType=VARCHAR},
      </if>
      <if test="record.receiveType != null">
        receive_type = #{record.receiveType,jdbcType=VARCHAR},
      </if>
      <if test="record.receiveDate != null">
        receive_date = #{record.receiveDate,jdbcType=DATE},
      </if>
      <if test="record.checkOutDate != null">
        check_out_date = #{record.checkOutDate,jdbcType=DATE},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update hotel_package
    set package_id = #{record.packageId,jdbcType=INTEGER},
      package_status = #{record.packageStatus,jdbcType=VARCHAR},
      owner_id = #{record.ownerId,jdbcType=VARCHAR},
      owner_type = #{record.ownerType,jdbcType=VARCHAR},
      receive_id = #{record.receiveId,jdbcType=VARCHAR},
      receive_type = #{record.receiveType,jdbcType=VARCHAR},
      receive_date = #{record.receiveDate,jdbcType=DATE},
      check_out_date = #{record.checkOutDate,jdbcType=DATE}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.hotel.packages.dal.po.PackageInfoBO">
    update hotel_package
    <set>
      <if test="packageStatus != null">
        package_status = #{packageStatus,jdbcType=VARCHAR},
      </if>
      <if test="ownerId != null">
        owner_id = #{ownerId,jdbcType=VARCHAR},
      </if>
      <if test="ownerType != null">
        owner_type = #{ownerType,jdbcType=VARCHAR},
      </if>
      <if test="receiveId != null">
        receive_id = #{receiveId,jdbcType=VARCHAR},
      </if>
      <if test="receiveType != null">
        receive_type = #{receiveType,jdbcType=VARCHAR},
      </if>
      <if test="receiveDate != null">
        receive_date = #{receiveDate,jdbcType=DATE},
      </if>
      <if test="checkOutDate != null">
        check_out_date = #{checkOutDate,jdbcType=DATE},
      </if>
    </set>
    where package_id = #{packageId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.hotel.packages.dal.po.PackageInfoBO">
    update hotel_package
    set package_status = #{packageStatus,jdbcType=VARCHAR},
      owner_id = #{ownerId,jdbcType=VARCHAR},
      owner_type = #{ownerType,jdbcType=VARCHAR},
      receive_id = #{receiveId,jdbcType=VARCHAR},
      receive_type = #{receiveType,jdbcType=VARCHAR},
      receive_date = #{receiveDate,jdbcType=DATE},
      check_out_date = #{checkOutDate,jdbcType=DATE}
    where package_id = #{packageId,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="org.hotel.packages.dal.po.PackageInfoBO">
    <id column="package_id" jdbcType="INTEGER" property="packageId" />
    <result column="package_status" jdbcType="VARCHAR" property="packageStatus" />
    <result column="owner_id" jdbcType="VARCHAR" property="ownerId" />
    <result column="owner_type" jdbcType="VARCHAR" property="ownerType" />
    <result column="receive_id" jdbcType="VARCHAR" property="receiveId" />
    <result column="receive_type" jdbcType="VARCHAR" property="receiveType" />
    <result column="receive_date" jdbcType="DATE" property="receiveDate" />
    <result column="check_out_date" jdbcType="DATE" property="checkOutDate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    package_id, package_status, owner_id, owner_type, receive_id, receive_type, receive_date, 
    check_out_date
  </sql>
  <select id="selectByExample" parameterType="org.hotel.packages.dal.po.PackageInfoBOExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from hotel_package
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from hotel_package
    where package_id = #{packageId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="Integer">
    delete from hotel_package
    where package_id = #{packageId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="org.hotel.packages.dal.po.PackageInfoBOExample">
    delete from hotel_package
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.hotel.packages.dal.po.PackageInfoBO">
    <selectKey keyProperty="packageId" order="AFTER" resultType="Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into hotel_package (package_status, owner_id, owner_type, 
      receive_id, receive_type, receive_date, 
      check_out_date)
    values (#{packageStatus,jdbcType=VARCHAR}, #{ownerId,jdbcType=VARCHAR}, #{ownerType,jdbcType=VARCHAR}, 
      #{receiveId,jdbcType=VARCHAR}, #{receiveType,jdbcType=VARCHAR}, #{receiveDate,jdbcType=DATE}, 
      #{checkOutDate,jdbcType=DATE})
  </insert>
  <insert id="insertSelective" parameterType="org.hotel.packages.dal.po.PackageInfoBO">
    <selectKey keyProperty="packageId" order="AFTER" resultType="Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into hotel_package
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="packageStatus != null">
        package_status,
      </if>
      <if test="ownerId != null">
        owner_id,
      </if>
      <if test="ownerType != null">
        owner_type,
      </if>
      <if test="receiveId != null">
        receive_id,
      </if>
      <if test="receiveType != null">
        receive_type,
      </if>
      <if test="receiveDate != null">
        receive_date,
      </if>
      <if test="checkOutDate != null">
        check_out_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="packageStatus != null">
        #{packageStatus,jdbcType=VARCHAR},
      </if>
      <if test="ownerId != null">
        #{ownerId,jdbcType=VARCHAR},
      </if>
      <if test="ownerType != null">
        #{ownerType,jdbcType=VARCHAR},
      </if>
      <if test="receiveId != null">
        #{receiveId,jdbcType=VARCHAR},
      </if>
      <if test="receiveType != null">
        #{receiveType,jdbcType=VARCHAR},
      </if>
      <if test="receiveDate != null">
        #{receiveDate,jdbcType=DATE},
      </if>
      <if test="checkOutDate != null">
        #{checkOutDate,jdbcType=DATE},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.hotel.packages.dal.po.PackageInfoBOExample" resultType="java.lang.Long">
    select count(*) from hotel_package
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update hotel_package
    <set>
      <if test="record.packageId != null">
        package_id = #{record.packageId,jdbcType=INTEGER},
      </if>
      <if test="record.packageStatus != null">
        package_status = #{record.packageStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.ownerId != null">
        owner_id = #{record.ownerId,jdbcType=VARCHAR},
      </if>
      <if test="record.ownerType != null">
        owner_type = #{record.ownerType,jdbcType=VARCHAR},
      </if>
      <if test="record.receiveId != null">
        receive_id = #{record.receiveId,jdbcType=VARCHAR},
      </if>
      <if test="record.receiveType != null">
        receive_type = #{record.receiveType,jdbcType=VARCHAR},
      </if>
      <if test="record.receiveDate != null">
        receive_date = #{record.receiveDate,jdbcType=DATE},
      </if>
      <if test="record.checkOutDate != null">
        check_out_date = #{record.checkOutDate,jdbcType=DATE},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update hotel_package
    set package_id = #{record.packageId,jdbcType=INTEGER},
      package_status = #{record.packageStatus,jdbcType=VARCHAR},
      owner_id = #{record.ownerId,jdbcType=VARCHAR},
      owner_type = #{record.ownerType,jdbcType=VARCHAR},
      receive_id = #{record.receiveId,jdbcType=VARCHAR},
      receive_type = #{record.receiveType,jdbcType=VARCHAR},
      receive_date = #{record.receiveDate,jdbcType=DATE},
      check_out_date = #{record.checkOutDate,jdbcType=DATE}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.hotel.packages.dal.po.PackageInfoBO">
    update hotel_package
    <set>
      <if test="packageStatus != null">
        package_status = #{packageStatus,jdbcType=VARCHAR},
      </if>
      <if test="ownerId != null">
        owner_id = #{ownerId,jdbcType=VARCHAR},
      </if>
      <if test="ownerType != null">
        owner_type = #{ownerType,jdbcType=VARCHAR},
      </if>
      <if test="receiveId != null">
        receive_id = #{receiveId,jdbcType=VARCHAR},
      </if>
      <if test="receiveType != null">
        receive_type = #{receiveType,jdbcType=VARCHAR},
      </if>
      <if test="receiveDate != null">
        receive_date = #{receiveDate,jdbcType=DATE},
      </if>
      <if test="checkOutDate != null">
        check_out_date = #{checkOutDate,jdbcType=DATE},
      </if>
    </set>
    where package_id = #{packageId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.hotel.packages.dal.po.PackageInfoBO">
    update hotel_package
    set package_status = #{packageStatus,jdbcType=VARCHAR},
      owner_id = #{ownerId,jdbcType=VARCHAR},
      owner_type = #{ownerType,jdbcType=VARCHAR},
      receive_id = #{receiveId,jdbcType=VARCHAR},
      receive_type = #{receiveType,jdbcType=VARCHAR},
      receive_date = #{receiveDate,jdbcType=DATE},
      check_out_date = #{checkOutDate,jdbcType=DATE}
    where package_id = #{packageId,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="org.hotel.package.dal.po.PackageInfoBO">
    <id column="package_id" jdbcType="INTEGER" property="packageId" />
    <result column="package_status" jdbcType="VARCHAR" property="packageStatus" />
    <result column="owner_id" jdbcType="VARCHAR" property="ownerId" />
    <result column="owner_type" jdbcType="VARCHAR" property="ownerType" />
    <result column="receive_id" jdbcType="VARCHAR" property="receiveId" />
    <result column="receive_type" jdbcType="VARCHAR" property="receiveType" />
    <result column="receive_date" jdbcType="DATE" property="receiveDate" />
    <result column="check_out_date" jdbcType="DATE" property="checkOutDate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    package_id, package_status, owner_id, owner_type, receive_id, receive_type, receive_date, 
    check_out_date
  </sql>
  <select id="selectByExample" parameterType="org.hotel.package.dal.po.PackageInfoBOExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from hotel_package
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from hotel_package
    where package_id = #{packageId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="Integer">
    delete from hotel_package
    where package_id = #{packageId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="org.hotel.package.dal.po.PackageInfoBOExample">
    delete from hotel_package
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.hotel.package.dal.po.PackageInfoBO">
    <selectKey keyProperty="packageId" order="AFTER" resultType="Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into hotel_package (package_status, owner_id, owner_type, 
      receive_id, receive_type, receive_date, 
      check_out_date)
    values (#{packageStatus,jdbcType=VARCHAR}, #{ownerId,jdbcType=VARCHAR}, #{ownerType,jdbcType=VARCHAR}, 
      #{receiveId,jdbcType=VARCHAR}, #{receiveType,jdbcType=VARCHAR}, #{receiveDate,jdbcType=DATE}, 
      #{checkOutDate,jdbcType=DATE})
  </insert>
  <insert id="insertSelective" parameterType="org.hotel.package.dal.po.PackageInfoBO">
    <selectKey keyProperty="packageId" order="AFTER" resultType="Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into hotel_package
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="packageStatus != null">
        package_status,
      </if>
      <if test="ownerId != null">
        owner_id,
      </if>
      <if test="ownerType != null">
        owner_type,
      </if>
      <if test="receiveId != null">
        receive_id,
      </if>
      <if test="receiveType != null">
        receive_type,
      </if>
      <if test="receiveDate != null">
        receive_date,
      </if>
      <if test="checkOutDate != null">
        check_out_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="packageStatus != null">
        #{packageStatus,jdbcType=VARCHAR},
      </if>
      <if test="ownerId != null">
        #{ownerId,jdbcType=VARCHAR},
      </if>
      <if test="ownerType != null">
        #{ownerType,jdbcType=VARCHAR},
      </if>
      <if test="receiveId != null">
        #{receiveId,jdbcType=VARCHAR},
      </if>
      <if test="receiveType != null">
        #{receiveType,jdbcType=VARCHAR},
      </if>
      <if test="receiveDate != null">
        #{receiveDate,jdbcType=DATE},
      </if>
      <if test="checkOutDate != null">
        #{checkOutDate,jdbcType=DATE},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.hotel.package.dal.po.PackageInfoBOExample" resultType="java.lang.Long">
    select count(*) from hotel_package
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update hotel_package
    <set>
      <if test="record.packageId != null">
        package_id = #{record.packageId,jdbcType=INTEGER},
      </if>
      <if test="record.packageStatus != null">
        package_status = #{record.packageStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.ownerId != null">
        owner_id = #{record.ownerId,jdbcType=VARCHAR},
      </if>
      <if test="record.ownerType != null">
        owner_type = #{record.ownerType,jdbcType=VARCHAR},
      </if>
      <if test="record.receiveId != null">
        receive_id = #{record.receiveId,jdbcType=VARCHAR},
      </if>
      <if test="record.receiveType != null">
        receive_type = #{record.receiveType,jdbcType=VARCHAR},
      </if>
      <if test="record.receiveDate != null">
        receive_date = #{record.receiveDate,jdbcType=DATE},
      </if>
      <if test="record.checkOutDate != null">
        check_out_date = #{record.checkOutDate,jdbcType=DATE},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update hotel_package
    set package_id = #{record.packageId,jdbcType=INTEGER},
      package_status = #{record.packageStatus,jdbcType=VARCHAR},
      owner_id = #{record.ownerId,jdbcType=VARCHAR},
      owner_type = #{record.ownerType,jdbcType=VARCHAR},
      receive_id = #{record.receiveId,jdbcType=VARCHAR},
      receive_type = #{record.receiveType,jdbcType=VARCHAR},
      receive_date = #{record.receiveDate,jdbcType=DATE},
      check_out_date = #{record.checkOutDate,jdbcType=DATE}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.hotel.package.dal.po.PackageInfoBO">
    update hotel_package
    <set>
      <if test="packageStatus != null">
        package_status = #{packageStatus,jdbcType=VARCHAR},
      </if>
      <if test="ownerId != null">
        owner_id = #{ownerId,jdbcType=VARCHAR},
      </if>
      <if test="ownerType != null">
        owner_type = #{ownerType,jdbcType=VARCHAR},
      </if>
      <if test="receiveId != null">
        receive_id = #{receiveId,jdbcType=VARCHAR},
      </if>
      <if test="receiveType != null">
        receive_type = #{receiveType,jdbcType=VARCHAR},
      </if>
      <if test="receiveDate != null">
        receive_date = #{receiveDate,jdbcType=DATE},
      </if>
      <if test="checkOutDate != null">
        check_out_date = #{checkOutDate,jdbcType=DATE},
      </if>
    </set>
    where package_id = #{packageId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.hotel.package.dal.po.PackageInfoBO">
    update hotel_package
    set package_status = #{packageStatus,jdbcType=VARCHAR},
      owner_id = #{ownerId,jdbcType=VARCHAR},
      owner_type = #{ownerType,jdbcType=VARCHAR},
      receive_id = #{receiveId,jdbcType=VARCHAR},
      receive_type = #{receiveType,jdbcType=VARCHAR},
      receive_date = #{receiveDate,jdbcType=DATE},
      check_out_date = #{checkOutDate,jdbcType=DATE}
    where package_id = #{packageId,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="org.hotel.package.dal.po.PackageInfoBO">
    <id column="package_id" jdbcType="INTEGER" property="packageId" />
    <result column="package_status" jdbcType="VARCHAR" property="packageStatus" />
    <result column="owner_id" jdbcType="VARCHAR" property="ownerId" />
    <result column="owner_type" jdbcType="VARCHAR" property="ownerType" />
    <result column="receive_id" jdbcType="VARCHAR" property="receiveId" />
    <result column="receive_type" jdbcType="VARCHAR" property="receiveType" />
    <result column="receive_date" jdbcType="DATE" property="receiveDate" />
    <result column="check_out_date" jdbcType="DATE" property="checkOutDate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    package_id, package_status, owner_id, owner_type, receive_id, receive_type, receive_date, 
    check_out_date
  </sql>
  <select id="selectByExample" parameterType="org.hotel.package.dal.po.PackageInfoBOExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from hotel_package
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from hotel_package
    where package_id = #{packageId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="Integer">
    delete from hotel_package
    where package_id = #{packageId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="org.hotel.package.dal.po.PackageInfoBOExample">
    delete from hotel_package
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.hotel.package.dal.po.PackageInfoBO">
    <selectKey keyProperty="packageId" order="AFTER" resultType="Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into hotel_package (package_status, owner_id, owner_type, 
      receive_id, receive_type, receive_date, 
      check_out_date)
    values (#{packageStatus,jdbcType=VARCHAR}, #{ownerId,jdbcType=VARCHAR}, #{ownerType,jdbcType=VARCHAR}, 
      #{receiveId,jdbcType=VARCHAR}, #{receiveType,jdbcType=VARCHAR}, #{receiveDate,jdbcType=DATE}, 
      #{checkOutDate,jdbcType=DATE})
  </insert>
  <insert id="insertSelective" parameterType="org.hotel.package.dal.po.PackageInfoBO">
    <selectKey keyProperty="packageId" order="AFTER" resultType="Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into hotel_package
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="packageStatus != null">
        package_status,
      </if>
      <if test="ownerId != null">
        owner_id,
      </if>
      <if test="ownerType != null">
        owner_type,
      </if>
      <if test="receiveId != null">
        receive_id,
      </if>
      <if test="receiveType != null">
        receive_type,
      </if>
      <if test="receiveDate != null">
        receive_date,
      </if>
      <if test="checkOutDate != null">
        check_out_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="packageStatus != null">
        #{packageStatus,jdbcType=VARCHAR},
      </if>
      <if test="ownerId != null">
        #{ownerId,jdbcType=VARCHAR},
      </if>
      <if test="ownerType != null">
        #{ownerType,jdbcType=VARCHAR},
      </if>
      <if test="receiveId != null">
        #{receiveId,jdbcType=VARCHAR},
      </if>
      <if test="receiveType != null">
        #{receiveType,jdbcType=VARCHAR},
      </if>
      <if test="receiveDate != null">
        #{receiveDate,jdbcType=DATE},
      </if>
      <if test="checkOutDate != null">
        #{checkOutDate,jdbcType=DATE},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.hotel.package.dal.po.PackageInfoBOExample" resultType="java.lang.Long">
    select count(*) from hotel_package
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update hotel_package
    <set>
      <if test="record.packageId != null">
        package_id = #{record.packageId,jdbcType=INTEGER},
      </if>
      <if test="record.packageStatus != null">
        package_status = #{record.packageStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.ownerId != null">
        owner_id = #{record.ownerId,jdbcType=VARCHAR},
      </if>
      <if test="record.ownerType != null">
        owner_type = #{record.ownerType,jdbcType=VARCHAR},
      </if>
      <if test="record.receiveId != null">
        receive_id = #{record.receiveId,jdbcType=VARCHAR},
      </if>
      <if test="record.receiveType != null">
        receive_type = #{record.receiveType,jdbcType=VARCHAR},
      </if>
      <if test="record.receiveDate != null">
        receive_date = #{record.receiveDate,jdbcType=DATE},
      </if>
      <if test="record.checkOutDate != null">
        check_out_date = #{record.checkOutDate,jdbcType=DATE},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update hotel_package
    set package_id = #{record.packageId,jdbcType=INTEGER},
      package_status = #{record.packageStatus,jdbcType=VARCHAR},
      owner_id = #{record.ownerId,jdbcType=VARCHAR},
      owner_type = #{record.ownerType,jdbcType=VARCHAR},
      receive_id = #{record.receiveId,jdbcType=VARCHAR},
      receive_type = #{record.receiveType,jdbcType=VARCHAR},
      receive_date = #{record.receiveDate,jdbcType=DATE},
      check_out_date = #{record.checkOutDate,jdbcType=DATE}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.hotel.package.dal.po.PackageInfoBO">
    update hotel_package
    <set>
      <if test="packageStatus != null">
        package_status = #{packageStatus,jdbcType=VARCHAR},
      </if>
      <if test="ownerId != null">
        owner_id = #{ownerId,jdbcType=VARCHAR},
      </if>
      <if test="ownerType != null">
        owner_type = #{ownerType,jdbcType=VARCHAR},
      </if>
      <if test="receiveId != null">
        receive_id = #{receiveId,jdbcType=VARCHAR},
      </if>
      <if test="receiveType != null">
        receive_type = #{receiveType,jdbcType=VARCHAR},
      </if>
      <if test="receiveDate != null">
        receive_date = #{receiveDate,jdbcType=DATE},
      </if>
      <if test="checkOutDate != null">
        check_out_date = #{checkOutDate,jdbcType=DATE},
      </if>
    </set>
    where package_id = #{packageId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.hotel.package.dal.po.PackageInfoBO">
    update hotel_package
    set package_status = #{packageStatus,jdbcType=VARCHAR},
      owner_id = #{ownerId,jdbcType=VARCHAR},
      owner_type = #{ownerType,jdbcType=VARCHAR},
      receive_id = #{receiveId,jdbcType=VARCHAR},
      receive_type = #{receiveType,jdbcType=VARCHAR},
      receive_date = #{receiveDate,jdbcType=DATE},
      check_out_date = #{checkOutDate,jdbcType=DATE}
    where package_id = #{packageId,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="org.hotel.package.dal.po.PackageInfoBO">
    <id column="package_id" jdbcType="INTEGER" property="packageId" />
    <result column="package_status" jdbcType="VARCHAR" property="packageStatus" />
    <result column="owner_id" jdbcType="VARCHAR" property="ownerId" />
    <result column="owner_type" jdbcType="VARCHAR" property="ownerType" />
    <result column="receive_id" jdbcType="VARCHAR" property="receiveId" />
    <result column="receive_type" jdbcType="VARCHAR" property="receiveType" />
    <result column="receive_date" jdbcType="DATE" property="receiveDate" />
    <result column="check_out_date" jdbcType="DATE" property="checkOutDate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    package_id, package_status, owner_id, owner_type, receive_id, receive_type, receive_date, 
    check_out_date
  </sql>
  <select id="selectByExample" parameterType="org.hotel.package.dal.po.PackageInfoBOExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from hotel_package
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from hotel_package
    where package_id = #{packageId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="Integer">
    delete from hotel_package
    where package_id = #{packageId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="org.hotel.package.dal.po.PackageInfoBOExample">
    delete from hotel_package
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.hotel.package.dal.po.PackageInfoBO">
    <selectKey keyProperty="packageId" order="AFTER" resultType="Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into hotel_package (package_status, owner_id, owner_type, 
      receive_id, receive_type, receive_date, 
      check_out_date)
    values (#{packageStatus,jdbcType=VARCHAR}, #{ownerId,jdbcType=VARCHAR}, #{ownerType,jdbcType=VARCHAR}, 
      #{receiveId,jdbcType=VARCHAR}, #{receiveType,jdbcType=VARCHAR}, #{receiveDate,jdbcType=DATE}, 
      #{checkOutDate,jdbcType=DATE})
  </insert>
  <insert id="insertSelective" parameterType="org.hotel.package.dal.po.PackageInfoBO">
    <selectKey keyProperty="packageId" order="AFTER" resultType="Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into hotel_package
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="packageStatus != null">
        package_status,
      </if>
      <if test="ownerId != null">
        owner_id,
      </if>
      <if test="ownerType != null">
        owner_type,
      </if>
      <if test="receiveId != null">
        receive_id,
      </if>
      <if test="receiveType != null">
        receive_type,
      </if>
      <if test="receiveDate != null">
        receive_date,
      </if>
      <if test="checkOutDate != null">
        check_out_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="packageStatus != null">
        #{packageStatus,jdbcType=VARCHAR},
      </if>
      <if test="ownerId != null">
        #{ownerId,jdbcType=VARCHAR},
      </if>
      <if test="ownerType != null">
        #{ownerType,jdbcType=VARCHAR},
      </if>
      <if test="receiveId != null">
        #{receiveId,jdbcType=VARCHAR},
      </if>
      <if test="receiveType != null">
        #{receiveType,jdbcType=VARCHAR},
      </if>
      <if test="receiveDate != null">
        #{receiveDate,jdbcType=DATE},
      </if>
      <if test="checkOutDate != null">
        #{checkOutDate,jdbcType=DATE},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.hotel.package.dal.po.PackageInfoBOExample" resultType="java.lang.Long">
    select count(*) from hotel_package
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update hotel_package
    <set>
      <if test="record.packageId != null">
        package_id = #{record.packageId,jdbcType=INTEGER},
      </if>
      <if test="record.packageStatus != null">
        package_status = #{record.packageStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.ownerId != null">
        owner_id = #{record.ownerId,jdbcType=VARCHAR},
      </if>
      <if test="record.ownerType != null">
        owner_type = #{record.ownerType,jdbcType=VARCHAR},
      </if>
      <if test="record.receiveId != null">
        receive_id = #{record.receiveId,jdbcType=VARCHAR},
      </if>
      <if test="record.receiveType != null">
        receive_type = #{record.receiveType,jdbcType=VARCHAR},
      </if>
      <if test="record.receiveDate != null">
        receive_date = #{record.receiveDate,jdbcType=DATE},
      </if>
      <if test="record.checkOutDate != null">
        check_out_date = #{record.checkOutDate,jdbcType=DATE},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update hotel_package
    set package_id = #{record.packageId,jdbcType=INTEGER},
      package_status = #{record.packageStatus,jdbcType=VARCHAR},
      owner_id = #{record.ownerId,jdbcType=VARCHAR},
      owner_type = #{record.ownerType,jdbcType=VARCHAR},
      receive_id = #{record.receiveId,jdbcType=VARCHAR},
      receive_type = #{record.receiveType,jdbcType=VARCHAR},
      receive_date = #{record.receiveDate,jdbcType=DATE},
      check_out_date = #{record.checkOutDate,jdbcType=DATE}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.hotel.package.dal.po.PackageInfoBO">
    update hotel_package
    <set>
      <if test="packageStatus != null">
        package_status = #{packageStatus,jdbcType=VARCHAR},
      </if>
      <if test="ownerId != null">
        owner_id = #{ownerId,jdbcType=VARCHAR},
      </if>
      <if test="ownerType != null">
        owner_type = #{ownerType,jdbcType=VARCHAR},
      </if>
      <if test="receiveId != null">
        receive_id = #{receiveId,jdbcType=VARCHAR},
      </if>
      <if test="receiveType != null">
        receive_type = #{receiveType,jdbcType=VARCHAR},
      </if>
      <if test="receiveDate != null">
        receive_date = #{receiveDate,jdbcType=DATE},
      </if>
      <if test="checkOutDate != null">
        check_out_date = #{checkOutDate,jdbcType=DATE},
      </if>
    </set>
    where package_id = #{packageId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.hotel.package.dal.po.PackageInfoBO">
    update hotel_package
    set package_status = #{packageStatus,jdbcType=VARCHAR},
      owner_id = #{ownerId,jdbcType=VARCHAR},
      owner_type = #{ownerType,jdbcType=VARCHAR},
      receive_id = #{receiveId,jdbcType=VARCHAR},
      receive_type = #{receiveType,jdbcType=VARCHAR},
      receive_date = #{receiveDate,jdbcType=DATE},
      check_out_date = #{checkOutDate,jdbcType=DATE}
    where package_id = #{packageId,jdbcType=INTEGER}
  </update>
  <resultMap id="BaseResultMap" type="org.hotel.package.dal.po.PackageInfoBO">
    <id column="package_id" jdbcType="INTEGER" property="packageId" />
    <result column="package_status" jdbcType="VARCHAR" property="packageStatus" />
    <result column="owner_id" jdbcType="VARCHAR" property="ownerId" />
    <result column="owner_type" jdbcType="VARCHAR" property="ownerType" />
    <result column="receive_id" jdbcType="VARCHAR" property="receiveId" />
    <result column="receive_type" jdbcType="VARCHAR" property="receiveType" />
    <result column="receive_date" jdbcType="DATE" property="receiveDate" />
    <result column="check_out_date" jdbcType="DATE" property="checkOutDate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    package_id, package_status, owner_id, owner_type, receive_id, receive_type, receive_date, 
    check_out_date
  </sql>
  <select id="selectByExample" parameterType="org.hotel.package.dal.po.PackageInfoBOExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from hotel_package
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from hotel_package
    where package_id = #{packageId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="Integer">
    delete from hotel_package
    where package_id = #{packageId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="org.hotel.package.dal.po.PackageInfoBOExample">
    delete from hotel_package
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.hotel.package.dal.po.PackageInfoBO">
    <selectKey keyProperty="packageId" order="AFTER" resultType="Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into hotel_package (package_status, owner_id, owner_type, 
      receive_id, receive_type, receive_date, 
      check_out_date)
    values (#{packageStatus,jdbcType=VARCHAR}, #{ownerId,jdbcType=VARCHAR}, #{ownerType,jdbcType=VARCHAR}, 
      #{receiveId,jdbcType=VARCHAR}, #{receiveType,jdbcType=VARCHAR}, #{receiveDate,jdbcType=DATE}, 
      #{checkOutDate,jdbcType=DATE})
  </insert>
  <insert id="insertSelective" parameterType="org.hotel.package.dal.po.PackageInfoBO">
    <selectKey keyProperty="packageId" order="AFTER" resultType="Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into hotel_package
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="packageStatus != null">
        package_status,
      </if>
      <if test="ownerId != null">
        owner_id,
      </if>
      <if test="ownerType != null">
        owner_type,
      </if>
      <if test="receiveId != null">
        receive_id,
      </if>
      <if test="receiveType != null">
        receive_type,
      </if>
      <if test="receiveDate != null">
        receive_date,
      </if>
      <if test="checkOutDate != null">
        check_out_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="packageStatus != null">
        #{packageStatus,jdbcType=VARCHAR},
      </if>
      <if test="ownerId != null">
        #{ownerId,jdbcType=VARCHAR},
      </if>
      <if test="ownerType != null">
        #{ownerType,jdbcType=VARCHAR},
      </if>
      <if test="receiveId != null">
        #{receiveId,jdbcType=VARCHAR},
      </if>
      <if test="receiveType != null">
        #{receiveType,jdbcType=VARCHAR},
      </if>
      <if test="receiveDate != null">
        #{receiveDate,jdbcType=DATE},
      </if>
      <if test="checkOutDate != null">
        #{checkOutDate,jdbcType=DATE},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.hotel.package.dal.po.PackageInfoBOExample" resultType="java.lang.Long">
    select count(*) from hotel_package
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update hotel_package
    <set>
      <if test="record.packageId != null">
        package_id = #{record.packageId,jdbcType=INTEGER},
      </if>
      <if test="record.packageStatus != null">
        package_status = #{record.packageStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.ownerId != null">
        owner_id = #{record.ownerId,jdbcType=VARCHAR},
      </if>
      <if test="record.ownerType != null">
        owner_type = #{record.ownerType,jdbcType=VARCHAR},
      </if>
      <if test="record.receiveId != null">
        receive_id = #{record.receiveId,jdbcType=VARCHAR},
      </if>
      <if test="record.receiveType != null">
        receive_type = #{record.receiveType,jdbcType=VARCHAR},
      </if>
      <if test="record.receiveDate != null">
        receive_date = #{record.receiveDate,jdbcType=DATE},
      </if>
      <if test="record.checkOutDate != null">
        check_out_date = #{record.checkOutDate,jdbcType=DATE},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update hotel_package
    set package_id = #{record.packageId,jdbcType=INTEGER},
      package_status = #{record.packageStatus,jdbcType=VARCHAR},
      owner_id = #{record.ownerId,jdbcType=VARCHAR},
      owner_type = #{record.ownerType,jdbcType=VARCHAR},
      receive_id = #{record.receiveId,jdbcType=VARCHAR},
      receive_type = #{record.receiveType,jdbcType=VARCHAR},
      receive_date = #{record.receiveDate,jdbcType=DATE},
      check_out_date = #{record.checkOutDate,jdbcType=DATE}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.hotel.package.dal.po.PackageInfoBO">
    update hotel_package
    <set>
      <if test="packageStatus != null">
        package_status = #{packageStatus,jdbcType=VARCHAR},
      </if>
      <if test="ownerId != null">
        owner_id = #{ownerId,jdbcType=VARCHAR},
      </if>
      <if test="ownerType != null">
        owner_type = #{ownerType,jdbcType=VARCHAR},
      </if>
      <if test="receiveId != null">
        receive_id = #{receiveId,jdbcType=VARCHAR},
      </if>
      <if test="receiveType != null">
        receive_type = #{receiveType,jdbcType=VARCHAR},
      </if>
      <if test="receiveDate != null">
        receive_date = #{receiveDate,jdbcType=DATE},
      </if>
      <if test="checkOutDate != null">
        check_out_date = #{checkOutDate,jdbcType=DATE},
      </if>
    </set>
    where package_id = #{packageId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.hotel.package.dal.po.PackageInfoBO">
    update hotel_package
    set package_status = #{packageStatus,jdbcType=VARCHAR},
      owner_id = #{ownerId,jdbcType=VARCHAR},
      owner_type = #{ownerType,jdbcType=VARCHAR},
      receive_id = #{receiveId,jdbcType=VARCHAR},
      receive_type = #{receiveType,jdbcType=VARCHAR},
      receive_date = #{receiveDate,jdbcType=DATE},
      check_out_date = #{checkOutDate,jdbcType=DATE}
    where package_id = #{packageId,jdbcType=INTEGER}
  </update>
</mapper>